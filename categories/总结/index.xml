<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>总结 on 中间件</title>
    <link>https://www6v.github.io/www6vMiddleware/categories/%E6%80%BB%E7%BB%93/</link>
    <description>Recent content in 总结 on 中间件</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 12 May 2022 22:17:03 +0000</lastBuildDate>
    <atom:link href="https://www6v.github.io/www6vMiddleware/categories/%E6%80%BB%E7%BB%93/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MQ总结(Kafka, Rocketmq, Rabbitmq) *</title>
      <link>https://www6v.github.io/www6vMiddleware/docs/message/Overview/mqCompare/</link>
      <pubDate>Thu, 12 May 2022 22:17:03 +0000</pubDate>
      <guid>https://www6v.github.io/www6vMiddleware/docs/message/Overview/mqCompare/</guid>
      <description>功能 RocketMQ Kafka RabbitMQ 可靠性* - 同步刷盘&#xA;- 异步刷盘 异步刷盘，丢数据概率高 同步刷盘 横向扩展能力 支持 支持 - 集群扩容依赖前端 - LVS 负载均衡调度 消费模型* Push/Pull Pull Push/Pull 定时消息* 支持（只支持18个固定 Level） 不支持 支持 顺序消息* 支持 支持 不支持 消息堆积能力 百亿级别 影响性能 影响性能 影响性能 消息堆积查询 支持 不支持 不支持 消息回溯 支持 支持（位置，时间） 不支持 消息重试 支持 生产者有重试机制 支持 死信队列 支持 不支持 支持 性能（常规）* 非常好 十万级 QPS 非常好 百万级 QPS 一般 万级 QPS 性能（万级 Topic 场景） 非常好 十万级 QPS 低 低 性能（海量消息堆积场景） 非常好 十万级 QPS 低 低 全链路消息轨迹 不支持 不支持 不支持 MQ比较[3]&#xD;#&#xD;重点[3]&#xD;#&#xD;功能级别不具备一票否决权 选型时要特别注意中间件的性能与扩展性 需要注重团队技术栈与中间件编程语言的匹配度 参数&#xD;#&#xD;Kafka、RabbitMQ、RocketMQ等消息中间件的对比 https://honeypps.</description>
    </item>
    <item>
      <title>可观测性 总结 *</title>
      <link>https://www6v.github.io/www6vMiddleware/docs/Observe/Overview/observability/</link>
      <pubDate>Sat, 31 Aug 2019 11:54:42 +0000</pubDate>
      <guid>https://www6v.github.io/www6vMiddleware/docs/Observe/Overview/observability/</guid>
      <description>关键词: 可观测性, 全链路, APM， Metric， Log&#xA;可观测性&#xD;#&#xD;1.0-基础支柱 [1][3]&#xD;#&#xD;模式 产品/框架 Log aggregation ELK， AWS Cloud Watch Application metrics + alert Prometheus 、AWS Cloud Watch Distributed tracing Zipkin ，Jaeger，pinpoint（无侵入）, skywalking（无侵入）, CAT Exception tracking Zipkin ，Jaeger，pinpoint（无侵入）, skywalking（无侵入）, CAT 2.0-统一的可观测性平台[3]&#xD;#&#xD;OpenTelemetry - 数据采集传输的标准化 3.0-内生的可观测性能力[3]&#xD;#&#xD;基于ebpf 监控指标和原则&#xD;#&#xD;USE 原则 [面向&amp;quot;资源监控指标&amp;quot;]&#xA;利用率（Utilization），资源被有效利用起来提供服务的平均时间占比 饱和度（Saturation），资源拥挤的程度，比如工作队列的长度 错误率（Errors），错误的数量 RED 原则 [面向&amp;quot;服务监控指标&amp;quot;]&#xA;每秒请求数量（Rate） 每秒错误数量（Errors） 服务响应时间（Duration） google 四个黄金监控指标 [面向服务]&#xA;延迟 latancy 通信量 throughtout 错误 error 饱和度 可观测性-发展[4]&#xD;#&#xD;metric,log, tracing 之间的转换，tradeoff metric 是最经济的 cost少</description>
    </item>
  </channel>
</rss>
